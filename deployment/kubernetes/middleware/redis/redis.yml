apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: lilishop-middleware
  labels:
    app.kubernetes.io/name: redis-service
    app.kubernetes.io/instance: redis-single
    app.kubernetes.io/version: "7.0.11"
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: lilishop
    tier: "middleware"
spec:
  type: NodePort
  ports:
    - name: "6379"
      nodePort: 30379
      port: 6379
      targetPort: redis
  selector:
    lilishop.service: redis
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: redis-data-pv
    app.kubernetes.io/instance: redis-single
    app.kubernetes.io/version: "7.0.11"
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: lilishop
    tier: "middleware"
  name: redis
  namespace: lilishop-middleware
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      lilishop.service: redis
  template:
    metadata:
      labels:
        lilishop.service: redis
    spec:
      containers:
        - args:
            - redis-server
            - --port
            - "6379"
            - --requirepass
            - lilishop
            - --appendonly
            - "yes"
            - --protected-mode
            - "no"
          image: pubrepo.jiagouyun.com/demo/demo-lilishop-redis:7.0.11
          name: redis
          ports:
            - name: redis
              containerPort: 6379
          resources: {}
          volumeMounts:
            - mountPath: /data
              name: redis-data-volumes
      restartPolicy: Always
      volumes:
        - name: redis-data-volumes
          hostPath:
            path: /root/docker/kubernetes/data/middleware/redis
            type: Directory
